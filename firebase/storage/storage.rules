rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    // request user is same as resource owner
    // must be set custom metadata {owner: uid}
    function isOwner() {
      return request.auth.uid == request.resource.metadata.owner || request.auth.uid == resource.metadata.owner;
    }

    // type check /////////////////////////////////////////////////////////////////////////
    // image
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    // video
    function isVideo() {
      return request.resource.contentType.matches('video/.*');
    }
    /////////////////////////////////////////////////////////////////////////

    match /files/{fileId} {
      allow read;
      allow create: if isOwner() && (isImage() || isVideo());
      allow update: if isOwner() && (isImage() || isVideo());
      allow delete: if isOwner();
    }
  }
}