import { useParams } from 'react-router-dom';

import { Spinner } from '@/components/Elements';
import { ContentLayout } from '@/components/Layout';
import type { User } from '@/features/users';
import { useAuthContext } from '@/lib/auth';
import { POLICIES, Authorization } from '@/lib/authorization';
import { formatDate } from '@/utils/format';

import { use{{ properCase name }} } from '../api/get{{ properCase name }}';
import { Delete{{ properCase name }} } from '../components/Delete{{ properCase name }}';

export const {{ properCase name }} = () => {
  const { {{ camelCase name }}Id } = useParams();
  const auth = useAuthContext();

  const {{ camelCase name }}Query = use{{ properCase name }}({ id: {{ camelCase name }}Id });

  if ({{ camelCase name }}Query.isLoading) {
    return (
      <div className="w-full h-48 flex justify-center items-center">
        <Spinner size="lg" />
      </div>
    );
  }

  if (!{{ camelCase name }}Query.data) return null;

  return (
    <ContentLayout title="{{ properCase name }}">
      <div className="mt-4">
        <div className="w-full bg-white shadow-sm p-4">
          <Authorization policyCheck={POLICIES['{{ camelCase name }}:delete'](auth?.userDocData as User, {{ camelCase name }}Query.data)}>
            <div className="flex justify-between">
              <span className="text-xs font-semibold">{formatDate({{ camelCase name }}Query.data.createdAt)}</span>
              <Delete{{ properCase name }} id={
                {{~ camelCase name }}Query.data.id} />
            </div>
          </Authorization>

          <div>
            <span>{
              {{~ camelCase name }}Query.data.body}</span>
          </div>
        </div>
      </div>
    </ContentLayout>
  );
};
